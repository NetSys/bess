- hosts: all
  tags: package
  tasks:
    - apt_repository: repo='ppa:ubuntu-toolchain-r/test/ubuntu'
      become: true

    - apt_key: url='http://apt.llvm.org/llvm-snapshot.gpg.key'
      become: true

    - apt_repository: repo='deb http://apt.llvm.org/{{ ansible_distribution_release }}/ llvm-toolchain-{{ ansible_distribution_release }}-6.0 main'
      become: true

    - name: Install list of packages (this step may take a long time)
      apt: name={{item}} state=latest update_cache=yes
      become: true
      with_items:
        - apt-transport-https
        - ca-certificates
        - build-essential
        - g++-7
        - g++-8
        - clang-6.0
        - autoconf
        - automake
        - libtool
        - make
        - cmake
        - pkg-config
        - libpthread-stubs0-dev
        - libunwind8-dev
        - liblzma-dev
        - zlib1g-dev
        - libpcap-dev
        - libssl1.0-dev  # grpc is not happy with openssl 1.1
        - libnuma-dev
        - curl
        - git
        - python
        - python-dev
        - python-pip
        # We later overwrite python-scapy when installing, the newest version of scapy
        # via pip, but first running apt-get install is convenient because it fetches
        # various dependencies.
        - python-scapy
        - libgflags-dev
        - libgoogle-glog-dev
        - libgraph-easy-perl
        - libgtest-dev
        - linux-headers-generic
        - lcov
        - python-autopep8

    - name: Install release-specific packages
      apt: name={{item}} state=latest update_cache=yes
      become: true
      with_items:
        - python-pep8
      when: ansible_distribution == 'Ubuntu' and ansible_lsb.major_release|int >= 16

    - name: Install Linux headers of current running kernel
      apt: name=linux-headers-{{ ansible_kernel }} state=latest update_cache=yes
      become: true
      when: ansible_kernel is match(".*-generic")

    - name: Install list of Python packages
      pip:
        name:
          - grpcio
          - scapy
        editable: false
        state: latest
      become: true

    - name: Wipe prior protobuf installs to avoid conflicts
      shell: apt-get remove -y -f libprotobuf-dev libprotobuf-java ^protobuf-*; rm -f `which protoc` warn=no
      become: true

    - name: sudo ldconfig
      shell: ldconfig
      become: true

    - name: Download gRPC
      git: repo=https://github.com/google/grpc dest=/tmp/grpc accept_hostkey=yes version=v1.3.2

    - name: Compile gRPC and its dependencies
      shell: make -j`nproc` EXTRA_CFLAGS='-Wno-error' HAS_SYSTEM_PROTOBUF=false chdir=/tmp/grpc

    - name: Install gRPC
      shell: make install chdir=/tmp/grpc
      become: true

    - name: Install protobuf
      shell: make install chdir=/tmp/grpc/third_party/protobuf
      become: true

    - name: Generate makefile for libbenchmark
      shell: cmake . chdir=/tmp/grpc/third_party/benchmark

    - name: Install libbenchmark
      shell: make install chdir=/tmp/grpc/third_party/benchmark
      become: true

    - name: sudo ldconfig
      shell: ldconfig
      become: true
