import time

# latency will be high, since the queue builds up
# as the Linux network stack is the bottleneck

v = VPort(loopback=1, rxq_cpus=[1])

Source() -> Timestamp() -> PortOut(port=v.name)
PortInc(port=v.name) -> m::Measure() -> Sink()

last = m.get_summary()

while True:
    bess.resume_all()
    time.sleep(1)
    bess.pause_all()

    now = m.get_summary()
    diff_ts = last.timestamp - now.timestamp
    diff_pkts = (last.packets - now.packets) / diff_ts
    diff_bits = (last.bits - now.bits) / diff_ts
    diff_total_latency_ns = (last.total_latency_ns - now.total_latency_ns) / diff_ts
    last = now

    if diff_pkts >= 1.0:
        ns_per_packet = diff_total_latency_ns / diff_pkts
    else:
        ns_per_packet = 0

    print '%s: %.3f Mpps, %.3f Mbps, rtt_avg: %.3f us, rtt_med: %.3f us, '\
          'rtt_99th: %.3f us, jitter_med: %.3f us, jitter_99th: %.3f us' % \
            (time.ctime(now.timestamp),
             diff_pkts / 1e6,
             diff_bits / 1e6,
             ns_per_packet / 1e3,
             last.latency_50_ns / 1e3,
             last.latency_99_ns / 1e3,
             last.jitter_50_ns / 1e3,
             last.jitter_99_ns / 1e3)
