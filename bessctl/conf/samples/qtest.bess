# Copyright (c) 2016-2017, Nefeli Networks, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# * Neither the names of the copyright holders nor the names of their
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

bess.add_worker(wid=0, core=0)
bess.add_worker(wid=1, core=1)

src1 = Source()
src2 = Source()
queue = queue::Queue()
sink = Sink()

src1 -> queue
queue -> sink
src2 -> sink

# Set up worker 1's TC tree with a RR (root)--Rate Limit--Source 1
bess.add_tc('w1root', policy='round_robin', wid=0)
bess.add_tc('slow', parent='w1root', policy='rate_limit', resource='packet', limit={'packet': 100})
src1.attach_task(parent='slow')

# Set up worker 2's TC tree with a Priority (root) and Queue with priority 1
# and Rate Limit--Source 2 with priority 0 (highest priority)
bess.add_tc('w2root', policy='priority', wid=1)
bess.add_tc('queue_rr', parent='w2root', policy='round_robin', priority=1)
queue.attach_task(parent='queue_rr')
bess.add_tc('fast', parent='w2root', priority=0, policy='rate_limit', resource='packet', limit={'packet': 100000})
src2.attach_task(parent='fast')
