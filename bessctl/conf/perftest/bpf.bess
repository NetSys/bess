import time
import pprint

import scapy.all as scapy

Source() -> rewrite::Rewrite() -> bpf::BPF()
bpf:0 -> Sink()      # for unmatched packets
bpf:1 -> Sink()      # for matched packets
bpf:2 -> Sink()      # for matched packets (by the second filter)

def run_testcase(exps, test_pkts):
    rewrite.clear()
    rewrite.add(templates=map(lambda x: str(x), test_pkts))

    # the higher number, the higher priority.
    bpf.clear()
    bpf.add(filters=[{'priority': -i, 'filter': exp, 'gate': i + 1} \
            for i, exp in enumerate(exps)])

    bess.resume_all()

    old_stats = bess.get_module_info(bpf.name).ogates
    time.sleep(2)
    new_stats = bess.get_module_info(bpf.name).ogates

    pps_unmatched = \
            (new_stats[0].pkts - old_stats[0].pkts) / \
            (new_stats[0].timestamp - old_stats[0].timestamp)

    pps_matched = sum([
            ((new_stats[i+1].pkts - old_stats[i+1].pkts) / \
             (new_stats[i+1].timestamp - old_stats[i+1].timestamp))
            for i in range(len(exps))])

    pps_total = pps_matched + pps_unmatched

    print 'Total: %8.3fMpps   Matched: %8.3fMpps   Unmatched: %8.3fMpps' %  \
            (pps_total / 1000000.0,
             pps_matched / 1000000.0,
             pps_unmatched / 1000000.0)

    bess.pause_all()

udp_pkt   = scapy.Ether()/scapy.IP()/scapy.UDP()
tcp_pkt   = scapy.Ether()/scapy.IP()/scapy.TCP()
http_pkt1 = scapy.Ether()/scapy.IP()/scapy.TCP(sport=8080, dport=80)
http_pkt2 = scapy.Ether()/scapy.IP()/scapy.TCP(sport=8081, dport=80)
http_pkt3 = scapy.Ether()/scapy.IP()/scapy.TCP(sport=1234, dport=80)
ftp_pkt   = scapy.Ether()/scapy.IP()/scapy.TCP(dport=21)

testcases = [
    ([''], [udp_pkt]),
    ([''], [udp_pkt, tcp_pkt]),
    (['udp'], [udp_pkt]),
    (['udp'], [tcp_pkt]),
    (['udp'], [udp_pkt, tcp_pkt]),
    (['tcp dst port 80'], [http_pkt1, http_pkt2, http_pkt3, ftp_pkt]),
    (['tcp src portrange 8000-9000 && tcp dst port 80'], [http_pkt1]),
    (['tcp src portrange 8000-9000 && tcp dst port 80'], [http_pkt1, http_pkt2, http_pkt3]),
    (['tcp src portrange 8000-9000 && tcp dst port 80'], [http_pkt1, http_pkt2, http_pkt3, ftp_pkt]),
    (['tcp src portrange 8000-9000 && tcp dst port 80', 'tcp'], [http_pkt1, http_pkt2, http_pkt3, ftp_pkt, udp_pkt]),
]

for i, case in enumerate(testcases):
    print
    print 'Testcase %d: %s' % (i, ', '.join(case[0]))
    pprint.pprint(case[1])

print
for i, case in enumerate(testcases):
    print 'Testcase %d:\t\t' % i,
    run_testcase(*case)
