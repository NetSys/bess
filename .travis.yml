sudo: required
dist: trusty
language: cpp

services:
  - docker

branches:
  only: 
    - master

env:
  global:
    - ASAN_SYMBOLIZER_PATH=/usr/lib/llvm-3.8/bin/llvm-symbolizer
    - ASAN_OPTIONS=log_path=/tmp/sanitizer,log_exe_name=1
    - LSAN_OPTIONS=suppressions=$TRAVIS_BUILD_DIR/core/lsan.suppress
    - UBSAN_OPTIONS=suppressions=$TRAVIS_BUILD_DIR/core/ubsan.suppress,print_stacktrace=1
  matrix:
    - VER_CXX=clang++-3.8 SANITIZE=1
    - VER_CXX=g++-4.8
    - VER_CXX=g++-5
    - VER_CXX=g++-5 DEBUG=1
    - VER_CXX=g++-5 TAG_SUFFIX=_32              # 32bit build
    - VER_CXX=g++-6

before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get -q update

install:
  - sudo apt-get install -y python
  - pip install grpcio scapy
  - "[[ ${DEBUG:-0} == 0 ]] || sudo apt-get install -y g++-5" # install gcov-5
  - "[[ ${SANITIZE:-0} == 0 ]] || sudo apt-get install -y llvm-3.8"
  - "[[ $TAG_SUFFIX != _32 ]] || sudo apt-get install -y lib32gcc1"
  - ln -s /build/dpdk-17.02 deps
  - "docker pull nefelinetworks/bess_build:latest${TAG_SUFFIX}"

before_script:
  - sudo sysctl -w vm.nr_hugepages=512
  - sudo mkdir -p /mnt/huge
  - sudo mount -t hugetlbfs nodev /mnt/huge
  - export CXX=$VER_CXX
  - export CC=$VER_CC

script:
  - ./container_build.py bess
  - ./container_build.py kmod_buildtest
  - (cd core && GCOV_PREFIX_STRIP=3 ./all_test) # TcpFlowReconstructTest requires working directory to be `core/`
  - GCOV_PREFIX_STRIP=2 ./sanity_check.sh
  - GCOV_PREFIX_STRIP=2 ./bessctl/bessctl -- daemon start -- run testing/run_module_tests

after_success:
  - "[[ ${DEBUG:-0} == 0 ]] || (cd core && bash <(curl -s https://codecov.io/bash) -x gcov-5)"

after_failure:
  - more /tmp/bessd.*.INFO.* | cat      # dump all bessd log files
  - more /tmp/sanitizer* | cat          # dump all sanitizer results

notifications:
  slack: nefeli:x5udJ7nDIKjCaCrRYprGc4mw
